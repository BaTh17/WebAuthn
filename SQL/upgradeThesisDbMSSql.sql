-- upgrade script for FIVE_KREDIWF_DEMO to use in Webflow demo environment with Version 1.45 
-- Used with a Microsoft SQL Server 2012

USE FIVE_KREDIWF_DEMO;

-- create Policy PT_USER Table
IF NOT EXISTS (
SELECT 1 FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME = 'PT_USER'
AND TABLE_SCHEMA = 'DBO'
)
BEGIN
	CREATE TABLE DBO.PT_USER
	(
	[PTID] INT NOT NULL IDENTITY(1, 1),
  [USERID] INT NOT NULL,
  [POLICY] VARCHAR(MAX)NOT NULL,
  [TESTVALUE1] VARCHAR(MAX),
  [TESTVALUE2] VARCHAR(MAX),
  [TESTVALUE3] VARCHAR(MAX),
  [TESTVALUE4] VARCHAR(MAX),
  [TESTVALUE5] VARCHAR(MAX),
  [CREATEDTIME] INT  ,
  [CHANGEDTIME] INT  ,
  [AKTIV] INT,
  CONSTRAINT PK_PTID PRIMARY KEY (PTID)
	) ON [PRIMARY];
END;
GO

-- create Keys PUBLICKEYS Table
IF NOT EXISTS (
SELECT 1 FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME = 'PUBLICKEYS'
AND TABLE_SCHEMA = 'DBO'
)
BEGIN
	CREATE TABLE PUBLICKEYS (
	  KEYID INT NOT NULL IDENTITY(1, 1),
	  USERID INT NOT NULL,
	  KEYVALUE VARCHAR(MAX) NOT NULL,
	  KEYIDENTIFIER VARCHAR(MAX) NOT NULL,
	  METADATA1 VARCHAR(MAX),
	  METADATA2 VARCHAR(MAX),
	  METADATA3 VARCHAR(MAX),
	  HOSTNAME VARCHAR(MAX),
	  CREATEDTIME INT  ,
	  CHANGEDTIME INT  ,
	  AKTIV INT  ,
	  CONSTRAINT PK_KEYID PRIMARY KEY (KEYID)
	) ON [PRIMARY];
END;
GO

-- create SETTINGS Table
-- STATUS 0 = Inactive, Status 1 = active
IF NOT EXISTS (
SELECT 1 FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME = 'SETTINGS'
AND TABLE_SCHEMA = 'DBO'
)
BEGIN
	CREATE TABLE SETTINGS (
	  WINDOWS_HELLO_STATUS INT DEFAULT 0
	);
END;
ELSE
 BEGIN
	 IF NOT EXISTS(
		SELECT *
		FROM sys.columns 
		WHERE Object_ID = Object_ID(N'SETTINGS')
		AND Name = N'WINDOWS_HELLO_STATUS')
	BEGIN
		ALTER TABLE SETTINGS ADD WINDOWS_HELLO_STATUS INT DEFAULT 0;
	END
END;
GO



--WF_USER erstellen, wenn sie nicht existiert
INSERT INTO WF_USER ([NAME], FULLNAME, USERPASSWORD, PWISENCRYPTED, DEFAULTLANGUAGE, EMAILADDRESS, MANDANTID, MITARBEITERNUMMER, EMAILBENACHRICHTIGUNG, DOKUMENTOEFFNEN, RESET_PASSWORD, SKIPTHROUGHTASKS, DESIGN_NUMMER, AKTIV, SHOW_NOTES, HIDE_SHOW_SETTINGS, AUFGABENLISTE_COOKIE, AUTHKEY, MINIMENU, SHOW_ACCOUNTING) 
SELECT 'tscm', 'Marcel Tschanz', '123456', 0, 'DE', 'test@fivetest.com', '55', 'tscm', 0, 0, 0, 0, 0, -1, 0, 0, '', '                                ', 0, 0
WHERE NOT EXISTS (SELECT *
FROM WF_USER
WHERE NAME = 'tscm');
GO

--WF_USER erstellen, wenn sie nicht existiert
INSERT INTO WF_USER ([NAME], FULLNAME, USERPASSWORD, PWISENCRYPTED, DEFAULTLANGUAGE, EMAILADDRESS, MANDANTID, MITARBEITERNUMMER, EMAILBENACHRICHTIGUNG, DOKUMENTOEFFNEN, RESET_PASSWORD, SKIPTHROUGHTASKS, DESIGN_NUMMER, AKTIV, SHOW_NOTES, HIDE_SHOW_SETTINGS, AUFGABENLISTE_COOKIE, AUTHKEY, MINIMENU, SHOW_ACCOUNTING) 
SELECT 'schf', 'Fabian Schwab', '123456', 0, 'DE', 'test@fivetest.com', '55', 'schf', 0, 0, 0, 0, 0, -1, 0, 0, '', '                                ', 0, 0
WHERE NOT EXISTS (SELECT *
FROM WF_USER
WHERE NAME = 'schf');
GO

--WF_USER erstellen, wenn sie nicht existiert
INSERT INTO WF_USER ([NAME], FULLNAME, USERPASSWORD, PWISENCRYPTED, DEFAULTLANGUAGE, EMAILADDRESS, MANDANTID, MITARBEITERNUMMER, EMAILBENACHRICHTIGUNG, DOKUMENTOEFFNEN, RESET_PASSWORD, SKIPTHROUGHTASKS, DESIGN_NUMMER, AKTIV, SHOW_NOTES, HIDE_SHOW_SETTINGS, AUFGABENLISTE_COOKIE, AUTHKEY, MINIMENU, SHOW_ACCOUNTING) 
SELECT 'five', 'FIVE', '123456', 0, 'DE', 'test@fivetest.com', '55', 'five', 0, 0, 0, 0, 0, -1, 0, 0, '', '                                ', 0, 0
WHERE NOT EXISTS (SELECT *
FROM WF_USER
WHERE NAME = 'five');
GO

--WF_USER erstellen, wenn sie nicht existiert
INSERT INTO WF_USER ([NAME], FULLNAME, USERPASSWORD, PWISENCRYPTED, DEFAULTLANGUAGE, EMAILADDRESS, MANDANTID, MITARBEITERNUMMER, EMAILBENACHRICHTIGUNG, DOKUMENTOEFFNEN, RESET_PASSWORD, SKIPTHROUGHTASKS, DESIGN_NUMMER, AKTIV, SHOW_NOTES, HIDE_SHOW_SETTINGS, AUFGABENLISTE_COOKIE, AUTHKEY, MINIMENU, SHOW_ACCOUNTING) 
SELECT 'five1', 'FIVE_1', '123456', 0, 'DE', 'test@fivetest.com', '55', 'five1', 0, 0, 0, 0, 0, -1, 0, 0, '', '                                ', 0, 0
WHERE NOT EXISTS (SELECT *
FROM WF_USER
WHERE NAME = 'five1');
GO

--WF_USER erstellen, wenn sie nicht existiert
INSERT INTO WF_USER ([NAME], FULLNAME, USERPASSWORD, PWISENCRYPTED, DEFAULTLANGUAGE, EMAILADDRESS, MANDANTID, MITARBEITERNUMMER, EMAILBENACHRICHTIGUNG, DOKUMENTOEFFNEN, RESET_PASSWORD, SKIPTHROUGHTASKS, DESIGN_NUMMER, AKTIV, SHOW_NOTES, HIDE_SHOW_SETTINGS, AUFGABENLISTE_COOKIE, AUTHKEY, MINIMENU, SHOW_ACCOUNTING) 
SELECT 'test1', 'FIVE_1', '123456', 0, 'DE', 'test@fivetest.com', '55', 'test1', 0, 0, 0, 0, 0, -1, 0, 0, '', '                                ', 0, 0
WHERE NOT EXISTS (SELECT *
FROM WF_USER
WHERE NAME = 'test1');
GO

--WF_USER erstellen, wenn sie nicht existiert
INSERT INTO WF_USER ([NAME], FULLNAME, USERPASSWORD, PWISENCRYPTED, DEFAULTLANGUAGE, EMAILADDRESS, MANDANTID, MITARBEITERNUMMER, EMAILBENACHRICHTIGUNG, DOKUMENTOEFFNEN, RESET_PASSWORD, SKIPTHROUGHTASKS, DESIGN_NUMMER, AKTIV, SHOW_NOTES, HIDE_SHOW_SETTINGS, AUFGABENLISTE_COOKIE, AUTHKEY, MINIMENU, SHOW_ACCOUNTING) 
SELECT 'hello', 'helloUser', '123456', 0, 'DE', 'test@fivetest.com', '55', 'hello', 0, 0, 0, 0, 0, -1, 0, 0, '', '                                ', 0, 0
WHERE NOT EXISTS (SELECT *
FROM WF_USER
WHERE NAME = 'hello');

GO
--Benutzerid vorbereiten
DECLARE @tscm INT;
DECLARE @hello INT;
DECLARE @schf INT;
DECLARE @test1 INT;
DECLARE @five1 INT;
DECLARE @five INT;

--Benutzerid abfuellen
SET  @tscm = (SELECT TOP 1 USERID FROM WF_USER WHERE NAME = 'tscm' );
SET  @hello = (SELECT TOP 1 USERID FROM WF_USER WHERE NAME = 'hello' );
SET  @schf = (SELECT TOP 1 USERID FROM WF_USER WHERE NAME = 'schf' );
SET  @test1 = (SELECT TOP 1 USERID FROM WF_USER WHERE NAME = 'test1' );
SET  @five1 = (SELECT TOP 1 USERID FROM WF_USER WHERE NAME = 'five1' );
SET  @five = (SELECT TOP 1 USERID FROM WF_USER WHERE NAME = 'five' );


-- 0 = Password only
-- 1 = 2-FA
-- 2 = Passwordless
SET IDENTITY_INSERT PT_USER ON
INSERT INTO PT_USER ( PTID, USERID,POLICY,TESTVALUE1,TESTVALUE2,TESTVALUE3,TESTVALUE4,TESTVALUE5,CREATEDTIME,CHANGEDTIME,AKTIV ) VALUES
(1, @tscm, '1', 'ist Marcel Tschanz tscm mit 2-FA', NULL,NULL,NULL,NULL,DATEDIFF(s, '1970-01-01 00:00:00',GETDATE() ), DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), -1),
(2, @five, '1', 'ist five ist2-FA', NULL,NULL,NULL,NULL,DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), -1),
(3, @five1, '2', 'ist five1 mit Passwordless', NULL,NULL,NULL,NULL,DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), -1),
(4, @schf, '0', 'ist schf mit password only', NULL,NULL,NULL,NULL,DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), -1),
(5, @hello, '2', 'ist hello mit password only', NULL,NULL,NULL,NULL,DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), -1),
(6, @test1, '2', 'ist test1 mit Passwordless', NULL,NULL,NULL,NULL,DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), DATEDIFF(s, '1970-01-01 00:00:00', GETDATE()), -1);
SET IDENTITY_INSERT PT_USER OFF

-- Activate Windows hello
UPDATE SETTINGS SET WINDOWS_HELLO_STATUS = 1;
